{
  "name": "authenticate",
  "main": "./lib/authenticate",
  "version": "0.1.5",
  "description": "Access token authentication middleware for Express, NodeJS",
  "author": {
    "name": "David Badley",
    "email": "dave@airbritelabs.com",
    "url": "http://www.davidbadley.com/"
  },
  "homepage": "http://airbriteinc.com/",
  "repository": {
    "type": "git",
    "url": "git://github.com/badave/authenticate.git"
  },
  "bugs": {
    "url": "http://github.com/badave/authenticate/issues"
  },
  "dependencies": {
    "express": ">=3.0.0",
    "underscore": "*"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "keywords": [
    "express",
    "connect",
    "auth",
    "authn",
    "authentication",
    "middleware",
    "accesstoken"
  ],
  "readme": "authenticate\n============\n\nAccess token authentication middleware for Express, NodeJS.  Makes it easy to add access token authentication to any API. \n\n## Installing it with npm\n\nAdd to `dependencies`:\n\n    \"authenticate\": \"*\"\n\n## Installing via npm\n\n    npm install authenticate\n\n## Usage\n\n    var authenticate = require(\"authenticate\");\n    \n    // Inside of app.configure\n    app.use(authenticate.middleware({\n        encrypt_key: \"\", // Add any key for encrypting data\n        validate_key: \"\" // Add any key for signing data\n    }));\n\n## And then...\n\nThe access token can be passed to a frontend client after the client is authenticated via some form of login.  For example, making a POST to /login with email and password, verifying email and password are correct, and then passing the access token to the client.  Here is some javascript for passing an access token to the client in JSON.\n\n\tapp.get('/login', function(req, res) {\n\t\tvar authenticate = require(\"authenticate\");\n\t\t// Insert user auth logic here\n\t\tres.writeHead(200, {\n\t\t    \"Content-Type\": \"application/json\"\n\t\t});\n\t\tres.write(JSON.stringify({\n\t\t    \"access_token\": authenticate.serializeToken(client_id, user_id, extra_data) // extra data is optional\n\t\t}));\n\t\tres.end();\n\t})\n\nAn access token embeds data into the request.  You can then check whether the user and client have access to a resource or not.\n\n    req.data.user_id // user id\n    req.data.client_id // A client id\n    req.data.date // date access token was created\n    req.data.extra_data // extra data passed in when serialized\n    req.data.access_token // Access token being passed in\n",
  "readmeFilename": "README.md",
  "_id": "authenticate@0.1.5",
  "dist": {
    "shasum": "e14f6f415b12d04448569413dc08ca57ee0c28d7",
    "tarball": "http://registry.npmjs.org/authenticate/-/authenticate-0.1.5.tgz"
  },
  "_npmVersion": "1.2.0",
  "_npmUser": {
    "name": "badave",
    "email": "badave@gmail.com"
  },
  "maintainers": [
    {
      "name": "badave",
      "email": "badave@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "e14f6f415b12d04448569413dc08ca57ee0c28d7",
  "_resolved": "https://registry.npmjs.org/authenticate/-/authenticate-0.1.5.tgz",
  "_from": "authenticate@*"
}
